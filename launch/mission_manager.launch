<launch>

  <!-- defines name of the namespace -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />

  <arg name="custom_config" default="" />

  <!-- will it run using GNU debugger? -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- will it run as standalone nodelet or using a nodelet manager? -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_mission_manager_manager" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="mission_manager" args="$(arg nodelet) mrs_mission_manager/MissionManager $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">

      <param name="config" value="$(find mrs_mission_manager)/config/config.yaml" />
      <param name="robot_name" value="$(arg UAV_NAME)" />

      <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
      <param if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" name="custom_config" value="$(arg custom_config)" />
      <param if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" name="custom_config" value="$(env PWD)/$(arg custom_config)" />

      <!-- Subscribers -->
      <remap from="~in/uav_state" to="state_monitor/uav_state" />

      <!-- Service clients -->
      <remap from="~svc/takeoff" to="uav_manager/takeoff" />
      <remap from="~svc/land" to="uav_manager/land" />
      <remap from="~svc/path" to="trajectory_generation/path" />
      <remap from="~svc/get_path" to="trajectory_generation/get_path" />
      <remap from="~svc/hover" to="control_manager/hover" />
      <remap from="~svc/mission_pause" to="control_manager/stop_trajectory_tracking" />
      <remap from="~svc/mission_flying_to_start" to="control_manager/goto_trajectory_start" />
      <remap from="~svc/mission_start" to="control_manager/start_trajectory_tracking" />
      <remap from="~svc/mission_validation" to="control_manager/validate_reference_list" />
      <remap from="~svc/trajectory_reference_out" to="control_manager/trajectory_reference" />

      <!-- Service servers -->
      <remap from="~svc_server/mission_activation" to="~mission_activation" />

    </node>

  </group>

</launch>
